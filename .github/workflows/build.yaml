name: SonarCloud
on:
  push:
    branches:
      - master
      - feature/*
jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.100

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
        
      - name: Install dotCover
        run: dotnet tool install --global JetBrains.dotCover.GlobalTool
        
      - name: Install project dependencies
        run: dotnet restore

      - name: Test and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"lucasAS1_TelegramBroker" /o:"lucasas1" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.dotcover.reportsPaths=dotCover.Output.html /d:sonar.coverage.exclusions=Program.cs
          dotnet build --no-incremental
          dotnet dotcover test --dcReportType=HTML --dcAttributeFilters=*.ExcludeFromCodeCoverage --dcExcludeFileMasks=Program.cs
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
  Publish:
      runs-on: ubuntu-latest
      needs: Build
      steps:
        - uses: actions/checkout@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Log in to GitHub container registry
          uses: docker/login-action@v1.10.0
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ github.token }}

        - name: Lowercase the repo name and username
          run: echo "REPO=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> ${GITHUB_ENV}

        - name: Build and push container image to registry
          uses: docker/build-push-action@v2
          with:
            push: true
            tags: ghcr.io/${{ env.REPO }}:${{ github.sha }}
            file: ./TelegramBroker.Application.WebApi/Dockerfile